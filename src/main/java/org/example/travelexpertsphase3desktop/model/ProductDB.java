package org.example.travelexpertsphase3desktop.model;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import org.example.travelexpertsphase3desktop.Utils.DbConfig;

import java.sql.*;

public class ProductDB {
    //method to get DB connection

    public static Connection getConnection() {
//        String url = "jdbc:mysql://localhost:3306/travelexperts";
//        String user = "root";
//        String password = "@Datetime123";

        String url = DbConfig.getProperty("url");
        String user = DbConfig.getProperty("user");
        String password = DbConfig.getProperty("password");

       Connection conn = null;
        try {
            conn = DriverManager.getConnection(url, user, password);

        } catch (SQLException e) {

            e.printStackTrace(); // Print full error details
            throw new RuntimeException("Could not connect to database"  + e.getMessage(), e);
        }
        return conn;
    }

    //get products
    public static ObservableList<Product> getProducts() throws SQLException {
        ObservableList<Product> products = FXCollections.observableArrayList();
        Product product;

        // create connection using static method
        Connection conn = getConnection();
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM products");
        while (rs.next()) {// iterate each row of result from db

            product = new Product(
                rs.getInt(1),
                   rs.getString(2)
            );
            products.add(product);  //add created products to list
        }
        return products;  //returns observable list of products
    }

    public static int addProduct(Product product) throws SQLException {
        Connection conn = getConnection();
        int numAffectedRows = 0;
        //columns name specified because ProductId will be autogenerated from db
        String sql = "INSERT INTO products (ProdName) " +
                "VALUES (?)";
        PreparedStatement stmt = conn.prepareStatement(sql);

        stmt.setString(1, product.getName());

     //run query
        numAffectedRows = stmt.executeUpdate();
        return numAffectedRows;
    }

    public static int updateProduct(int productId, Product product) throws SQLException {
        Connection conn = getConnection();
        int numAffectedRows = 0;
        //columns name specified because AgtId will be autogenerated from db
        String sql = "Update products " +
                "SET ProdName= ? " +
                "where ProductId = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);

        stmt.setString(1, product.getName());
        stmt.setInt(2, productId);

        //run query
        numAffectedRows = stmt.executeUpdate();
        conn.close();
        return numAffectedRows;
    }

    //delete
    public static int deleteProduct(int productId) throws SQLException {
        int numAffectedRows = 0;
        Connection conn = getConnection();
        String sql = "Delete from products where ProductId = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setInt(1, productId);
        numAffectedRows = stmt.executeUpdate();
        conn.close();
        return numAffectedRows;

    }
}